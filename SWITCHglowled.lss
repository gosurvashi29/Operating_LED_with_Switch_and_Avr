
SWITCHglowled.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000029c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  0000029c  00000310  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00000310  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000082  00000000  00000000  000009dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      0000002f  00000000  00000000  00000a5e  2**0
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  00000a8d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000053d  00000000  00000000  00000ad5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000016c  00000000  00000000  00001012  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000249  00000000  00000000  0000117e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000094  00000000  00000000  000013c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000016c  00000000  00000000  0000145c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001a1  00000000  00000000  000015c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00001769  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 c0 00 	call	0x180	; 0x180 <main>
  64:	0c 94 4c 01 	jmp	0x298	; 0x298 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <_Z8disp_cmdj>:
	return 0;
}	
	
	void disp_cmd(unsigned int cmd)
	{
		PORTC=((cmd & 0XF0)+0X04);
  6c:	9c 01       	movw	r18, r24
  6e:	20 7f       	andi	r18, 0xF0	; 240
  70:	33 27       	eor	r19, r19
  72:	2c 5f       	subi	r18, 0xFC	; 252
  74:	25 bb       	out	0x15, r18	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  76:	e9 ef       	ldi	r30, 0xF9	; 249
  78:	f0 e0       	ldi	r31, 0x00	; 0
  7a:	31 97       	sbiw	r30, 0x01	; 1
  7c:	f1 f7       	brne	.-4      	; 0x7a <_Z8disp_cmdj+0xe>
  7e:	00 c0       	rjmp	.+0      	; 0x80 <_Z8disp_cmdj+0x14>
  80:	00 00       	nop
		_delay_ms(1);
		PORTC=PORTC - 0X04;
  82:	95 b3       	in	r25, 0x15	; 21
  84:	94 50       	subi	r25, 0x04	; 4
  86:	95 bb       	out	0x15, r25	; 21
		PORTC=(((cmd<<4)& 0XF0)+0X04);
  88:	82 95       	swap	r24
  8a:	80 7f       	andi	r24, 0xF0	; 240
  8c:	8c 5f       	subi	r24, 0xFC	; 252
  8e:	85 bb       	out	0x15, r24	; 21
  90:	89 ef       	ldi	r24, 0xF9	; 249
  92:	90 e0       	ldi	r25, 0x00	; 0
  94:	01 97       	sbiw	r24, 0x01	; 1
  96:	f1 f7       	brne	.-4      	; 0x94 <_Z8disp_cmdj+0x28>
  98:	00 c0       	rjmp	.+0      	; 0x9a <_Z8disp_cmdj+0x2e>
  9a:	00 00       	nop
		_delay_ms(1);
		PORTC=PORTC-0X04;
  9c:	85 b3       	in	r24, 0x15	; 21
  9e:	84 50       	subi	r24, 0x04	; 4
  a0:	85 bb       	out	0x15, r24	; 21
  a2:	08 95       	ret

000000a4 <_Z9disp_datai>:
		
	}
	void disp_data( int cmd)
	{
		PORTC=((cmd  & 0XF0)+0X05);
  a4:	9c 01       	movw	r18, r24
  a6:	20 7f       	andi	r18, 0xF0	; 240
  a8:	33 27       	eor	r19, r19
  aa:	2b 5f       	subi	r18, 0xFB	; 251
  ac:	25 bb       	out	0x15, r18	; 21
  ae:	e9 ef       	ldi	r30, 0xF9	; 249
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	31 97       	sbiw	r30, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <_Z9disp_datai+0xe>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <_Z9disp_datai+0x14>
  b8:	00 00       	nop
		_delay_ms(1);
		PORTC=PORTC - 0X04;
  ba:	25 b3       	in	r18, 0x15	; 21
  bc:	24 50       	subi	r18, 0x04	; 4
  be:	25 bb       	out	0x15, r18	; 21
		PORTC=(((cmd <<4)& 0XF0)+0X05);
  c0:	82 95       	swap	r24
  c2:	92 95       	swap	r25
  c4:	90 7f       	andi	r25, 0xF0	; 240
  c6:	98 27       	eor	r25, r24
  c8:	80 7f       	andi	r24, 0xF0	; 240
  ca:	98 27       	eor	r25, r24
  cc:	8b 5f       	subi	r24, 0xFB	; 251
  ce:	85 bb       	out	0x15, r24	; 21
  d0:	89 ef       	ldi	r24, 0xF9	; 249
  d2:	90 e0       	ldi	r25, 0x00	; 0
  d4:	01 97       	sbiw	r24, 0x01	; 1
  d6:	f1 f7       	brne	.-4      	; 0xd4 <_Z9disp_datai+0x30>
  d8:	00 c0       	rjmp	.+0      	; 0xda <_Z9disp_datai+0x36>
  da:	00 00       	nop
		_delay_ms(1);
		PORTC=PORTC-0X04;
  dc:	85 b3       	in	r24, 0x15	; 21
  de:	84 50       	subi	r24, 0x04	; 4
  e0:	85 bb       	out	0x15, r24	; 21
  e2:	08 95       	ret

000000e4 <_Z8disp_numj>:
			
		}
	}

	void disp_num(unsigned int num)
	{
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
  ec:	ec 01       	movw	r28, r24
		int a=0;
		if (num==0)
  ee:	00 97       	sbiw	r24, 0x00	; 0
  f0:	61 f5       	brne	.+88     	; 0x14a <_Z8disp_numj+0x66>
		{
			disp_data(48);
  f2:	80 e3       	ldi	r24, 0x30	; 48
  f4:	90 e0       	ldi	r25, 0x00	; 0
  f6:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
		}
		disp_cmd (0X04);
  fa:	84 e0       	ldi	r24, 0x04	; 4
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
 102:	28 c0       	rjmp	.+80     	; 0x154 <_Z8disp_numj+0x70>
		while (num!=0)
		{
			a=num % 10;
 104:	9e 01       	movw	r18, r28
 106:	ad ec       	ldi	r26, 0xCD	; 205
 108:	bc ec       	ldi	r27, 0xCC	; 204
 10a:	0e 94 40 01 	call	0x280	; 0x280 <__umulhisi3>
 10e:	8c 01       	movw	r16, r24
 110:	16 95       	lsr	r17
 112:	07 95       	ror	r16
 114:	16 95       	lsr	r17
 116:	07 95       	ror	r16
 118:	16 95       	lsr	r17
 11a:	07 95       	ror	r16
 11c:	98 01       	movw	r18, r16
 11e:	22 0f       	add	r18, r18
 120:	33 1f       	adc	r19, r19
 122:	c8 01       	movw	r24, r16
 124:	88 0f       	add	r24, r24
 126:	99 1f       	adc	r25, r25
 128:	88 0f       	add	r24, r24
 12a:	99 1f       	adc	r25, r25
 12c:	88 0f       	add	r24, r24
 12e:	99 1f       	adc	r25, r25
 130:	82 0f       	add	r24, r18
 132:	93 1f       	adc	r25, r19
 134:	9e 01       	movw	r18, r28
 136:	28 1b       	sub	r18, r24
 138:	39 0b       	sbc	r19, r25
 13a:	c9 01       	movw	r24, r18
			disp_data(a+48);
 13c:	c0 96       	adiw	r24, 0x30	; 48
 13e:	0e 94 52 00 	call	0xa4	; 0xa4 <_Z9disp_datai>
			num=num/10;
 142:	e8 01       	movw	r28, r16
		if (num==0)
		{
			disp_data(48);
		}
		disp_cmd (0X04);
		while (num!=0)
 144:	20 97       	sbiw	r28, 0x00	; 0
 146:	f1 f6       	brne	.-68     	; 0x104 <_Z8disp_numj+0x20>
 148:	05 c0       	rjmp	.+10     	; 0x154 <_Z8disp_numj+0x70>
		int a=0;
		if (num==0)
		{
			disp_data(48);
		}
		disp_cmd (0X04);
 14a:	84 e0       	ldi	r24, 0x04	; 4
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
 152:	d8 cf       	rjmp	.-80     	; 0x104 <_Z8disp_numj+0x20>
		{
			a=num % 10;
			disp_data(a+48);
			num=num/10;
		}
	}
 154:	df 91       	pop	r29
 156:	cf 91       	pop	r28
 158:	1f 91       	pop	r17
 15a:	0f 91       	pop	r16
 15c:	08 95       	ret

0000015e <_Z8lcd_initv>:
	void lcd_init()
	{
		disp_cmd(0X02);
 15e:	82 e0       	ldi	r24, 0x02	; 2
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
		disp_cmd(0X28);
 166:	88 e2       	ldi	r24, 0x28	; 40
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
		disp_cmd(0X0C);
 16e:	8c e0       	ldi	r24, 0x0C	; 12
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
		disp_cmd(0X06);
 176:	86 e0       	ldi	r24, 0x06	; 6
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
 17e:	08 95       	ret

00000180 <main>:
void disp_data(int cmd);
void disp_num(unsigned int num);
void disp_string(  char *str);
int main(void)
{
	DDRA=0X00;
 180:	1a ba       	out	0x1a, r1	; 26
	DDRB=0XFF;
 182:	8f ef       	ldi	r24, 0xFF	; 255
 184:	87 bb       	out	0x17, r24	; 23
	PORTA=0XFF;
 186:	8b bb       	out	0x1b, r24	; 27
	DDRC = 0XFF;
 188:	84 bb       	out	0x14, r24	; 20

	lcd_init();
 18a:	0e 94 af 00 	call	0x15e	; 0x15e <_Z8lcd_initv>
	while (1)
	{
		if (PINA==0b11111110)
		{
			PORTB=0b00000001;//1
 18e:	c1 e0       	ldi	r28, 0x01	; 1
		disp_cmd(0X87);
		disp_num(7);
	}
	else if (PINA==0b01111111)
	{
		PORTB=0b10000000;//8
 190:	00 e8       	ldi	r16, 0x80	; 128
		disp_cmd(0X86);
		disp_num(6);
	}
	else if (PINA==0b10111111)
	{
		PORTB=0b01000000;//7
 192:	68 94       	set
 194:	cc 24       	eor	r12, r12
 196:	c6 f8       	bld	r12, 6
		disp_cmd(0X84);
		disp_num(5);
	}
	else if (PINA==0b11011111)
	{
		PORTB=0b00100000;//6
 198:	68 94       	set
 19a:	dd 24       	eor	r13, r13
 19c:	d5 f8       	bld	r13, 5
		disp_cmd(0X83);
		disp_num(4);
	}
	else if (PINA==0b11101111)
	{
		PORTB=0b00010000;//5
 19e:	68 94       	set
 1a0:	ee 24       	eor	r14, r14
 1a2:	e4 f8       	bld	r14, 4
		disp_cmd(0X82);
		disp_num(3);
	}
	else if (PINA==0b11110111)
	{
		PORTB=0b00001000;//4
 1a4:	68 94       	set
 1a6:	ff 24       	eor	r15, r15
 1a8:	f3 f8       	bld	r15, 3
			disp_cmd(0X81);
			disp_num(2);
		}
	else if (PINA==0b11111011)
	{
		PORTB=0b00000100;//3
 1aa:	14 e0       	ldi	r17, 0x04	; 4
			
		}
		
		else if (PINA==0b11111101)
		{
			PORTB=0b00000010;//2
 1ac:	d2 e0       	ldi	r29, 0x02	; 2
	DDRC = 0XFF;

	lcd_init();
	while (1)
	{
		if (PINA==0b11111110)
 1ae:	89 b3       	in	r24, 0x19	; 25
 1b0:	8e 3f       	cpi	r24, 0xFE	; 254
 1b2:	51 f4       	brne	.+20     	; 0x1c8 <main+0x48>
		{
			PORTB=0b00000001;//1
 1b4:	c8 bb       	out	0x18, r28	; 24
			disp_cmd(0X80);
 1b6:	80 e8       	ldi	r24, 0x80	; 128
 1b8:	90 e0       	ldi	r25, 0x00	; 0
 1ba:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_num(1);
 1be:	81 e0       	ldi	r24, 0x01	; 1
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
 1c6:	f3 cf       	rjmp	.-26     	; 0x1ae <main+0x2e>
			
			
		}
		
		else if (PINA==0b11111101)
 1c8:	89 b3       	in	r24, 0x19	; 25
 1ca:	8d 3f       	cpi	r24, 0xFD	; 253
 1cc:	51 f4       	brne	.+20     	; 0x1e2 <main+0x62>
		{
			PORTB=0b00000010;//2
 1ce:	d8 bb       	out	0x18, r29	; 24
			disp_cmd(0X81);
 1d0:	81 e8       	ldi	r24, 0x81	; 129
 1d2:	90 e0       	ldi	r25, 0x00	; 0
 1d4:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
			disp_num(2);
 1d8:	82 e0       	ldi	r24, 0x02	; 2
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
 1e0:	e6 cf       	rjmp	.-52     	; 0x1ae <main+0x2e>
		}
	else if (PINA==0b11111011)
 1e2:	89 b3       	in	r24, 0x19	; 25
 1e4:	8b 3f       	cpi	r24, 0xFB	; 251
 1e6:	51 f4       	brne	.+20     	; 0x1fc <main+0x7c>
	{
		PORTB=0b00000100;//3
 1e8:	18 bb       	out	0x18, r17	; 24
		disp_cmd(0X82);
 1ea:	82 e8       	ldi	r24, 0x82	; 130
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
		disp_num(3);
 1f2:	83 e0       	ldi	r24, 0x03	; 3
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
 1fa:	d9 cf       	rjmp	.-78     	; 0x1ae <main+0x2e>
	}
	else if (PINA==0b11110111)
 1fc:	89 b3       	in	r24, 0x19	; 25
 1fe:	87 3f       	cpi	r24, 0xF7	; 247
 200:	51 f4       	brne	.+20     	; 0x216 <main+0x96>
	{
		PORTB=0b00001000;//4
 202:	f8 ba       	out	0x18, r15	; 24
		disp_cmd(0X83);
 204:	83 e8       	ldi	r24, 0x83	; 131
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
		disp_num(4);
 20c:	84 e0       	ldi	r24, 0x04	; 4
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
 214:	cc cf       	rjmp	.-104    	; 0x1ae <main+0x2e>
	}
	else if (PINA==0b11101111)
 216:	89 b3       	in	r24, 0x19	; 25
 218:	8f 3e       	cpi	r24, 0xEF	; 239
 21a:	51 f4       	brne	.+20     	; 0x230 <main+0xb0>
	{
		PORTB=0b00010000;//5
 21c:	e8 ba       	out	0x18, r14	; 24
		disp_cmd(0X84);
 21e:	84 e8       	ldi	r24, 0x84	; 132
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
		disp_num(5);
 226:	85 e0       	ldi	r24, 0x05	; 5
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
 22e:	bf cf       	rjmp	.-130    	; 0x1ae <main+0x2e>
	}
	else if (PINA==0b11011111)
 230:	89 b3       	in	r24, 0x19	; 25
 232:	8f 3d       	cpi	r24, 0xDF	; 223
 234:	51 f4       	brne	.+20     	; 0x24a <main+0xca>
	{
		PORTB=0b00100000;//6
 236:	d8 ba       	out	0x18, r13	; 24
		disp_cmd(0X86);
 238:	86 e8       	ldi	r24, 0x86	; 134
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
		disp_num(6);
 240:	86 e0       	ldi	r24, 0x06	; 6
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
 248:	b2 cf       	rjmp	.-156    	; 0x1ae <main+0x2e>
	}
	else if (PINA==0b10111111)
 24a:	89 b3       	in	r24, 0x19	; 25
 24c:	8f 3b       	cpi	r24, 0xBF	; 191
 24e:	51 f4       	brne	.+20     	; 0x264 <main+0xe4>
	{
		PORTB=0b01000000;//7
 250:	c8 ba       	out	0x18, r12	; 24
		disp_cmd(0X87);
 252:	87 e8       	ldi	r24, 0x87	; 135
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
		disp_num(7);
 25a:	87 e0       	ldi	r24, 0x07	; 7
 25c:	90 e0       	ldi	r25, 0x00	; 0
 25e:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
 262:	a5 cf       	rjmp	.-182    	; 0x1ae <main+0x2e>
	}
	else if (PINA==0b01111111)
 264:	89 b3       	in	r24, 0x19	; 25
 266:	8f 37       	cpi	r24, 0x7F	; 127
 268:	09 f0       	breq	.+2      	; 0x26c <main+0xec>
 26a:	a1 cf       	rjmp	.-190    	; 0x1ae <main+0x2e>
	{
		PORTB=0b10000000;//8
 26c:	08 bb       	out	0x18, r16	; 24
		disp_cmd(0X88);
 26e:	88 e8       	ldi	r24, 0x88	; 136
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	0e 94 36 00 	call	0x6c	; 0x6c <_Z8disp_cmdj>
		disp_num(8);
 276:	88 e0       	ldi	r24, 0x08	; 8
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	0e 94 72 00 	call	0xe4	; 0xe4 <_Z8disp_numj>
 27e:	97 cf       	rjmp	.-210    	; 0x1ae <main+0x2e>

00000280 <__umulhisi3>:
 280:	a2 9f       	mul	r26, r18
 282:	b0 01       	movw	r22, r0
 284:	b3 9f       	mul	r27, r19
 286:	c0 01       	movw	r24, r0
 288:	a3 9f       	mul	r26, r19
 28a:	01 d0       	rcall	.+2      	; 0x28e <__umulhisi3+0xe>
 28c:	b2 9f       	mul	r27, r18
 28e:	70 0d       	add	r23, r0
 290:	81 1d       	adc	r24, r1
 292:	11 24       	eor	r1, r1
 294:	91 1d       	adc	r25, r1
 296:	08 95       	ret

00000298 <_exit>:
 298:	f8 94       	cli

0000029a <__stop_program>:
 29a:	ff cf       	rjmp	.-2      	; 0x29a <__stop_program>
